import * as Lint from 'tslint';
import * as ts from 'typescript';
export declare class Rule extends Lint.Rules.TypedRule {
    static FAILURE: string;
    static HOOKS_PREFIX: string;
    static LIFE_CYCLE_HOOKS_NAMES: Array<any>;
    applyWithProgram(sourceFile: ts.SourceFile, languageService: ts.LanguageService): Lint.RuleFailure[];
}
export declare class ClassMetadataWalker extends Lint.RuleWalker {
    protected languageService: ts.LanguageService;
    constructor(sourceFile: ts.SourceFile, options: Lint.IOptions, languageService: ts.LanguageService);
    visitClassDeclaration(node: ts.ClassDeclaration): void;
    private extractInterfaces(node);
    private validateMethods(methods, interfaces, className);
    private isMethodValidHook(m, interfaces);
}
